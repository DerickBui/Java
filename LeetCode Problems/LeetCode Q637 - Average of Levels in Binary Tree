/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> averageLevel = new LinkedList<Double>();
        
        if (root == null) {
            return averageLevel;
        }
        
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        
        queue.add(root);
        
        while (!(queue.isEmpty())) {
            int size = queue.size();
            double total = 0;
            
            for (int i = 0; i < size; i++) {
                TreeNode curr = queue.remove();
                total += curr.val;
                
                if (curr.left != null) {
                    queue.add(curr.left);
                }
                
                if (curr.right != null) {
                    queue.add(curr.right);
                }
            }
            
            averageLevel.add(total/size);
        }
        
        return averageLevel;
    }
}
